File: profile
Type: cpu
Time: Feb 28, 2019 at 6:02am (JST)
Duration: 1.46mins, Total samples = 80.52s (91.85%)
Showing nodes accounting for 78.66s, 97.69% of 80.52s total
Dropped 108 nodes (cum <= 0.40s)
      flat  flat%   sum%        cum   cum%
    22.84s 28.37% 28.37%     34.95s 43.41%  image/png.filter
    12.09s 15.01% 43.38%     30.68s 38.10%  compress/flate.(*compressor).deflate
     9.87s 12.26% 55.64%      9.87s 12.26%  compress/flate.matchLen
     5.92s  7.35% 62.99%      5.92s  7.35%  image/png.abs (inline)
     4.93s  6.12% 69.11%     14.80s 18.38%  compress/flate.(*compressor).findMatch
     4.12s  5.12% 74.23%      8.31s 10.32%  image/png.paeth
     3.80s  4.72% 78.95%      3.80s  4.72%  image/png.abs8 (inline)
     3.49s  4.33% 83.28%      3.49s  4.33%  hash/adler32.update
     2.38s  2.96% 86.24%      4.11s  5.10%  image/png.filterPaeth
     1.84s  2.29% 88.52%      1.84s  2.29%  compress/flate.hash4 (inline)
     1.52s  1.89% 90.41%      1.52s  1.89%  main.ProcessSlice
     1.47s  1.83% 92.24%     10.78s 13.39%  image/png.(*decoder).readImagePass
     1.30s  1.61% 93.85%      1.30s  1.61%  runtime.memmove
     0.79s  0.98% 94.83%      1.09s  1.35%  compress/flate.(*decompressor).huffSym
     0.45s  0.56% 95.39%      2.54s  3.15%  compress/flate.(*decompressor).huffmanBlock
     0.43s  0.53% 95.93%      0.43s  0.53%  runtime.memclrNoHeapPointers
     0.37s  0.46% 96.39%      0.48s   0.6%  compress/flate.(*huffmanBitWriter).writeCode
     0.36s  0.45% 96.83%      1.15s  1.43%  compress/flate.(*huffmanBitWriter).writeTokens
     0.34s  0.42% 97.26%      0.68s  0.84%  compress/flate.(*dictDecoder).tryWriteCopy (inline)
     0.20s  0.25% 97.50%      0.74s  0.92%  compress/flate.(*huffmanBitWriter).indexTokens
     0.09s  0.11% 97.62%     68.05s 84.51%  image/png.(*encoder).writeImage
     0.02s 0.025% 97.64%     32.67s 40.57%  compress/zlib.(*Writer).Write
     0.02s 0.025% 97.67%      3.51s  4.36%  hash/adler32.(*digest).Write
     0.01s 0.012% 97.68%     31.03s 38.54%  compress/flate.(*compressor).write
     0.01s 0.012% 97.69%      0.48s   0.6%  runtime.mallocgc
         0     0% 97.69%     31.03s 38.54%  compress/flate.(*Writer).Write
         0     0% 97.69%      1.95s  2.42%  compress/flate.(*compressor).writeBlock
         0     0% 97.69%      2.70s  3.35%  compress/flate.(*decompressor).Read
         0     0% 97.69%      1.95s  2.42%  compress/flate.(*huffmanBitWriter).writeBlock
         0     0% 97.69%      0.47s  0.58%  compress/flate.(*huffmanEncoder).generate
         0     0% 97.69%      4.60s  5.71%  compress/zlib.(*reader).Read
         0     0% 97.69%      0.45s  0.56%  image.NewNRGBA (inline)
         0     0% 97.69%     68.08s 84.55%  image/png.(*Encoder).Encode
         0     0% 97.69%     10.78s 13.39%  image/png.(*decoder).decode
         0     0% 97.69%     10.78s 13.39%  image/png.(*decoder).parseChunk
         0     0% 97.69%     10.78s 13.39%  image/png.(*decoder).parseIDAT
         0     0% 97.69%     68.05s 84.51%  image/png.(*encoder).writeIDATs
         0     0% 97.69%     10.78s 13.39%  image/png.Decode
         0     0% 97.69%      4.60s  5.71%  io.ReadAtLeast
         0     0% 97.69%      4.60s  5.71%  io.ReadFull
         0     0% 97.69%     80.38s 99.83%  main.EncodeDefaultCompression
         0     0% 97.69%     80.38s 99.83%  main.Processor.ProcessAll
         0     0% 97.69%     80.40s 99.85%  main.main
         0     0% 97.69%      0.42s  0.52%  runtime.(*mheap).alloc
         0     0% 97.69%      0.43s  0.53%  runtime.largeAlloc
         0     0% 97.69%     80.40s 99.85%  runtime.main
         0     0% 97.69%      0.44s  0.55%  runtime.makeslice
         0     0% 97.69%      0.43s  0.53%  runtime.mallocgc.func1
         0     0% 97.69%      0.46s  0.57%  runtime.systemstack
